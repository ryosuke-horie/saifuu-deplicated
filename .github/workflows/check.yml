name: check

on:
  pull_request:
    paths:
      - 'new/**'
      - '.github/workflows/**'

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm i
        working-directory: ./new

      - name: Run TypeScript check and linting
        run: pnpm check
        working-directory: ./new

  unit-tests:
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm i
        working-directory: ./new

      - name: Run unit tests
        run: pnpm test:unit
        working-directory: ./new
        env:
          CI: true
          NODE_ENV: test

      - name: Generate test coverage report
        run: pnpm test:unit -- --coverage.enabled=false
        working-directory: ./new
        env:
          CI: true
          NODE_ENV: test

      # Coverage upload disabled due to v8 provider compatibility issues in CI
      # - name: Upload coverage reports
      #   uses: actions/upload-artifact@v4  
      #   if: always()
      #   with:
      #     name: unit-test-coverage
      #     path: new/coverage/
      #     retention-days: 30

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm i
        working-directory: ./new

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox webkit
        working-directory: ./new

      - name: Set up test environment variables
        run: |
          echo "CI=true" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo "PLAYWRIGHT_ENVIRONMENT=ci" >> $GITHUB_ENV
          echo "PLAYWRIGHT_TEST_BASE_URL=http://localhost:5173" >> $GITHUB_ENV
        working-directory: ./new

      - name: Build application for testing
        run: pnpm run build
        working-directory: ./new
        env:
          NODE_ENV: production

      - name: Run E2E tests
        run: pnpm run test:e2e:ci
        working-directory: ./new
        env:
          CI: true
          NODE_ENV: test
          PLAYWRIGHT_ENVIRONMENT: ci
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:5173

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: new/playwright-report/
          retention-days: 30

      - name: Upload test screenshots and videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results
          path: new/test-results/
          retention-days: 7

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if we're in a PR context
            if (!context.payload.pull_request) {
              console.log('Not in a PR context, skipping comment');
              return;
            }
            
            const reportPath = path.join(process.cwd(), 'new', 'playwright-report', 'index.html');
            let comment = 'ðŸŽ­ **E2E Tests Failed**\n\n';
            comment += 'The Playwright E2E tests failed. ';
            comment += 'Please check the [test artifacts](' + context.payload.repository.html_url + '/actions/runs/' + context.runId + ') for detailed results.\n\n';
            comment += '**Next Steps:**\n';
            comment += '1. Download the test artifacts to view screenshots and videos\n';
            comment += '2. Run tests locally with `pnpm run test:e2e:debug` for detailed debugging\n';
            comment += '3. Fix the issues and push your changes\n';
            
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
